<?php

namespace AppBundle\Repository\Battle;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * PhotoBattleRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PhotoBattleRepository extends \Doctrine\ORM\EntityRepository
{
    // Requete affichant les photos battle d'un visiteur par date et id descendant
    public function findByDesc($user){
        $qb = $this->createQueryBuilder('ph');

        $qb->where('ph.user = :user')
            ->setParameter(':user', $user)
            ->addOrderBy('ph.date_upload', 'DESC')
            ->addOrderBy('ph.id', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function getPhotos($page, $nbPerPage, $user)
    {
        // On récupere toutes les photos du visiteur
        $query = $this->createQueryBuilder('ph')
                ->where('ph.user = :user')
                ->setParameter('user', $user)
                ->addOrderBy('ph.date_upload', 'DESC')
                ->addOrderBy('ph.id', 'DESC')
                ->getQuery();

        // Puis on définit à quelle photo doit commencer la page
        $query->setFirstResult(($page-1)*$nbPerPage)
                ->setMaxResults($nbPerPage);

        // On retourne l'objet Paginator correspondant à la requête construite
        return new  Paginator($query, true);
    }
}
